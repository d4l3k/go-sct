/* Generated by wayland-scanner 1.19.0 */

#include <stdlib.h>
#include <stdint.h>
#include "wayland-util.h"

#ifndef __has_attribute
# define __has_attribute(x) 0  /* Compatibility with non-clang compilers. */
#endif

#if (__has_attribute(visibility) || defined(__GNUC__) && __GNUC__ >= 4)
#define WL_PRIVATE __attribute__ ((visibility("hidden")))
#else
#define WL_PRIVATE
#endif

extern const struct wl_interface orbital_authorizer_feedback_interface;

static const struct wl_interface *orbital_authorizer_types[] = {
	&orbital_authorizer_feedback_interface,
	NULL,
};

static const struct wl_message orbital_authorizer_requests[] = {
	{ "destroy", "", orbital_authorizer_types + 0 },
	{ "authorize", "ns", orbital_authorizer_types + 0 },
};

WL_PRIVATE const struct wl_interface orbital_authorizer_interface = {
	"orbital_authorizer", 1,
	2, orbital_authorizer_requests,
	0, NULL,
};

static const struct wl_message orbital_authorizer_feedback_events[] = {
	{ "granted", "", orbital_authorizer_types + 0 },
	{ "denied", "", orbital_authorizer_types + 0 },
};

WL_PRIVATE const struct wl_interface orbital_authorizer_feedback_interface = {
	"orbital_authorizer_feedback", 1,
	0, NULL,
	2, orbital_authorizer_feedback_events,
};

